name: test

on:
  pull_request:
  push:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ 3.8 ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge

      - name: Install deps
        run: |
          conda activate test
          conda install mamba pip pytest-cov pytest-xdist
          set -x
          echo "${PATH}"
          which pip
          which python
          python -m pip install ensureconda==1.2.1
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt

      - name: install lib
        shell: bash -l {0}
        run: |
          conda activate test
          which pip
          pip install -e . --no-deps --force-reinstall

      - name: get micromamba nightly
        shell: bash -l {0}
        if: runner.os == 'Linux'
        run: |
          conda activate test
          curl -L https://github.com/mamba-org/boa-forge/releases/download/micromamba-nightly-21.3.11.1046/micromamba-nightly-linux-64 -o $CONDA_PREFIX/bin/micromamba
      - name: get micromamba nightly
        shell: bash -l {0}
        if: runner.os == 'macOS'
        run: |
          conda activate test
          curl -L https://github.com/mamba-org/boa-forge/releases/download/micromamba-nightly-21.3.11.1046/micromamba-nightly-osx-64 -o $CONDA_PREFIX/bin/micromamba
      - name: run-test
        shell: bash -l {0}
        run: |
          conda activate test
          micromamba -v 
          cp -a tests "${RUNNER_TEMP}/"
          pushd "${RUNNER_TEMP}"
          export TMPDIR="${RUNNER_TEMP}"
          ls -lah
          set -x
          which pytest
          pytest --showlocals -vrsx --cov=conda_lock tests

      - name: test-gdal
        shell: bash -l {0}
        run: |
          conda activate test
          pushd "${RUNNER_TEMP}/tests/gdal"
          export TMPDIR="${RUNNER_TEMP}"
          ls -lah
          conda-lock -f environment.yml -p linux-64


